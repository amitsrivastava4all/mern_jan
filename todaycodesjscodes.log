var a = 100;
undefined
typeof a;
"number"
var b = "200";
undefined
a + b
"100200"
a + parseInt(b);
300
a + parseFloat(b);
300
parseFloat("200.20")
200.2
parseInt("200.20")
200
window;
Window {window: Window, self: Window, document: document, name: "", location: Location, …}
typeof window;
"object"
window instanceof Window;
true
typeof Window;
"function"
window.parseInt("100");
100
window.a;
100
a;
100
b = 1000;
1000
window.b;
1000
var x = 100/0;
undefined
x;
Infinity
typeof x;
"number"
isFinite(x);
false
isFinite(x)?'Correct':'Not Correct';
"Not Correct"
window.isFinite(x);
false
10 - "Amit"
NaN
window.isNaN(10-"Amit");
true
var x = 100/"Amit";
undefined
x;
NaN
x + 1000;
NaN
x + NaN
NaN
NaN + NaN
NaN
NaN + undefined
NaN
10 - undefined
NaN
10 == 10
true
10 == "10'
VM1194:1 Uncaught SyntaxError: Invalid or unexpected token
10 == "10"
true
10 == 10
true
"10"==10
true
[] == []
false
10==="10"
false
[]===[]
false
2n + 4
VM1334:1 Uncaught TypeError: Cannot mix BigInt and other types, use explicit conversions
    at <anonymous>:1:4
(anonymous) @ VM1334:1
function show(){
console.log('I am Show Function ');
}
undefined
typeof show;
"function"
show();
VM1413:2 I am Show Function 
undefined
show(10,20);
VM1413:2 I am Show Function 
undefined
show([10,20]);
VM1413:2 I am Show Function 
undefined
show(parseInt);
VM1413:2 I am Show Function 
undefined
show({id:1001});
VM1413:2 I am Show Function 
undefined
function add(){
console.log('I am Add ');
}
undefined
add(10,20);
VM1693:2 I am Add 
undefined
add([10,20],30);
VM1693:2 I am Add 
undefined
typeof add;
"function"
console.dir(add);

VM1864:1 ƒ add()arguments: nullcaller: nulllength: 0name: "add"prototype: {constructor: ƒ}__proto__: ƒ ()[[FunctionLocation]]: VM1693:1[[Scopes]]: Scopes[1]
undefined
function add(){
console.log('I am Add ', arguments.length);
}
undefined
add(10,20);
VM1928:2 I am Add  2
undefined
add([10,20],30);
VM1928:2 I am Add  2
undefined
add([10,20],30,40,50);
VM1928:2 I am Add  4
undefined
function add(){
//console.log('I am Add ', arguments.length);
var sum = 0;
for(var i = 0 ; i<arguments.length; i++){
sum+=arguments[i];
}
return sum;
}
undefined
add(10,20);
30
add(1,2,3);
6
add(1,2,3,4,5,6,7,8,9,10);
55
add(1,2,3,4,5,6,"7",8,9,10);
"2178910"
function add(){
//console.log('I am Add ', arguments.length);
var sum = 0;
for(var i = 0 ; i<arguments.length; i++){
sum+=parseInt(arguments[i]);
}
return sum;
}
undefined
add(1,2,3,4,5,6,"7",8,9,10);
55
parseInt("Amit")
NaN
parseInt("eight")
NaN
add(1,2,3,4,5,6,"7","eight",9,10);
NaN
function add(){
//console.log('I am Add ', arguments.length);
var sum = 0;
for(var i = 0 ; i<arguments.length; i++){
sum+=isNaN(parseInt(arguments[i]))?0:parseInt(arguments[i]);
}
return sum;
}
undefined
add(1,2,3,4,5,6,"7","eight",9,10);
47
55 - 8
47
true?'Hello':'Bye'
"Hello"
function one(){
return 1;
}
undefined
function two(){
return 2;
}
undefined
var x = one;
undefined
var y = one();
undefined
x;
ƒ one(){
return 1;
}
y;
1
typeof x;
"function"
typeof y;
"number"
add(1,2,3,4,5,6,"7","eight",one,two);
28
function add(){
//console.log('I am Add ', arguments.length);
var sum = 0;
for(var i = 0 ; i<arguments.length; i++){
if(typeof arguments[i]==="function"){
arguments[i] = arguments[i]();
}
sum+=isNaN(parseInt(arguments[i]))?0:parseInt(arguments[i]);
}
return sum;
}
undefined
add(1,2,3,4,5,6,"7","eight",one,two);
31
function add(){
console.log('I am Add ', arguments.length);
var sum = 0;
for(var i = 0 ; i<arguments.length; i++){
if(typeof arguments[i]==="function"){
arguments[i] = arguments[i]();
}
sum+=isNaN(parseInt(arguments[i]))?0:parseInt(arguments[i]);
}
return sum;
}
undefined
add(1,2,3,4,5,6,"7","eight",one,two);
VM2940:2 I am Add  10
31
function add(){
//console.log('I am Add ', arguments.length);
var sum = 0;
for(var i = 0 ; i<arguments.length; i++){
if(typeof arguments[i]==="function"){
arguments[i] = arguments[i]();
}
sum+=isNaN(parseInt(arguments[i]))?0:parseInt(arguments[i]);
}
return sum;
}
undefined
add(1,2,3,4,5,6,"7","eight",one,two,[9,"10",one]);
40
var arr = [10,20,"20"];
undefined
typeof arr;
"object"
arr instanceof Array;
true
function add(){
//console.log('I am Add ', arguments.length);
var sum = 0;
for(var i = 0 ; i<arguments.length; i++){
if(arguments[i] instanceof Array){

for(var j = 0 ; j<arguments[i].length; i++){
if(typeof arguments[i][j]==="function"){
arguments[i][j] = arguments[i][j]();
}
sum+=isNaN(parseInt(arguments[i][j]))?0:parseInt(arguments[i][j]);
}
continue;
}
else
if(typeof arguments[i]==="function"){
arguments[i] = arguments[i]();
}
sum+=isNaN(parseInt(arguments[i]))?0:parseInt(arguments[i]);
}
return sum;
}
undefined
add(1,2,3,4,5,6,"7","eight",one,two,[9,"10",one]);
VM3294:7 Uncaught TypeError: Cannot read property 'length' of undefined
    at add (<anonymous>:7:32)
    at <anonymous>:1:1
add @ VM3294:7
(anonymous) @ VM3306:1
function add(){
//console.log('I am Add ', arguments.length);
var sum = 0;
for(var i = 0 ; i<arguments.length; i++){
if(arguments[i] instanceof Array){

for(var j = 0 ; j<arguments[i][j].length; i++){
if(typeof arguments[i][j]==="function"){
arguments[i][j] = arguments[i][j]();
}
sum+=isNaN(parseInt(arguments[i][j]))?0:parseInt(arguments[i][j]);
}
continue;
}
else
if(typeof arguments[i]==="function"){
arguments[i] = arguments[i]();
}
sum+=isNaN(parseInt(arguments[i]))?0:parseInt(arguments[i]);
}
return sum;
}
undefined
add(1,2,3,4,5,6,"7","eight",one,two,[9,"10",one]);
31
function add(){
//console.log('I am Add ', arguments.length);
var sum = 0;
for(var i = 0 ; i<arguments.length; i++){
if(arguments[i] instanceof Array){

for(var j = 0 ; j<arguments[i][j].length; j++){
if(typeof arguments[i][j]==="function"){
arguments[i][j] = arguments[i][j]();
}
sum+=isNaN(parseInt(arguments[i][j]))?0:parseInt(arguments[i][j]);
}
continue;
}
else
if(typeof arguments[i]==="function"){
arguments[i] = arguments[i]();
}
sum+=isNaN(parseInt(arguments[i]))?0:parseInt(arguments[i]);
}
return sum;
}
undefined
add(1,2,3,4,5,6,"7","eight",one,two,[9,"10",one]);
31
function add(){
//console.log('I am Add ', arguments.length);
var sum = 0;
for(var i = 0 ; i<arguments.length; i++){
if(arguments[i] instanceof Array){

for(var j = 0 ; j<arguments[i][j].length; j++){
if(typeof arguments[i][j]==="function"){
arguments[i][j] = arguments[i][j]();
}
sum+=isNaN(parseInt(arguments[i][j]))?0:parseInt(arguments[i][j]);
}
console.log('Sum of Array is ',sum);
continue;
}
else
if(typeof arguments[i]==="function"){
arguments[i] = arguments[i]();
}
sum+=isNaN(parseInt(arguments[i]))?0:parseInt(arguments[i]);
}
return sum;
}
undefined
add(1,2,3,4,5,6,"7","eight",one,two,[9,"10",one]);
VM3398:13 Sum of Array is  31
31
function add(){
//console.log('I am Add ', arguments.length);
var sum = 0;
for(var i = 0 ; i<arguments.length; i++){
if(arguments[i] instanceof Array){
console.log('Inside Array ');
for(var j = 0 ; j<arguments[i][j].length; j++){
if(typeof arguments[i][j]==="function"){
arguments[i][j] = arguments[i][j]();
}
sum+=isNaN(parseInt(arguments[i][j]))?0:parseInt(arguments[i][j]);
}
console.log('Sum of Array is ',sum);
continue;
}
else
if(typeof arguments[i]==="function"){
arguments[i] = arguments[i]();
}
sum+=isNaN(parseInt(arguments[i]))?0:parseInt(arguments[i]);
}
return sum;
}
undefined
add(1,2,3,4,5,6,"7","eight",one,two,[9,"10",one]);
VM3451:6 Inside Array 
VM3451:13 Sum of Array is  31
31
function add(){
//console.log('I am Add ', arguments.length);
var sum = 0;
for(var i = 0 ; i<arguments.length; i++){
if(arguments[i] instanceof Array){
console.log('Inside Array ');
for(var j = 0 ; j<arguments[i][j].length; j++){
console.log('Array ',arguments[i][j], sum);
if(typeof arguments[i][j]==="function"){
arguments[i][j] = arguments[i][j]();
}
sum+=isNaN(parseInt(arguments[i][j]))?0:parseInt(arguments[i][j]);
}
console.log('Sum of Array is ',sum);
continue;
}
else
if(typeof arguments[i]==="function"){
arguments[i] = arguments[i]();
}
sum+=isNaN(parseInt(arguments[i]))?0:parseInt(arguments[i]);
}
return sum;
}
undefined
add(1,2,3,4,5,6,"7","eight",one,two,[9,"10",one]);
VM3589:6 Inside Array 
VM3589:14 Sum of Array is  31
31
function add(){
//console.log('I am Add ', arguments.length);
var sum = 0;
for(var i = 0 ; i<arguments.length; i++){
if(arguments[i] instanceof Array){
console.log('Inside Array ');
for(var j = 0 ; j<arguments[i].length; j++){
console.log('Array ',arguments[i][j], sum);
if(typeof arguments[i][j]==="function"){
arguments[i][j] = arguments[i][j]();
}
sum+=isNaN(parseInt(arguments[i][j]))?0:parseInt(arguments[i][j]);
}
console.log('Sum of Array is ',sum);
continue;
}
else
if(typeof arguments[i]==="function"){
arguments[i] = arguments[i]();
}
sum+=isNaN(parseInt(arguments[i]))?0:parseInt(arguments[i]);
}
return sum;
}
undefined
add(1,2,3,4,5,6,"7","eight",one,two,[9,"10",one]);
VM3605:6 Inside Array 
VM3605:8 Array  9 31
VM3605:8 Array  10 40
VM3605:8 Array  ƒ one(){
return 1;
} 50
VM3605:14 Sum of Array is  51
51
function add(){
//console.log('I am Add ', arguments.length);
var sum = 0;
for(var i = 0 ; i<arguments.length; i++){
if(arguments[i] instanceof Array){
//console.log('Inside Array ');
for(var j = 0 ; j<arguments[i].length; j++){
//console.log('Array ',arguments[i][j], sum);
if(typeof arguments[i][j]==="function"){
arguments[i][j] = arguments[i][j]();
}
sum+=isNaN(parseInt(arguments[i][j]))?0:parseInt(arguments[i][j]);
}
//console.log('Sum of Array is ',sum);
continue;
}
else
if(typeof arguments[i]==="function"){
arguments[i] = arguments[i]();
}
sum+=isNaN(parseInt(arguments[i]))?0:parseInt(arguments[i]);
}
return sum;
}
undefined
add(1,2,3,4,5,6,"7","eight",one,two,[9,"10",one]);
51
function jQuery(){
console.log(arguments);
}
undefined
var $ = jQuery;
undefined
typeof $
"function"
$("#id")
VM3750:2 Arguments ["#id", callee: ƒ, Symbol(Symbol.iterator): ƒ]
undefined
$(".id")
VM3750:2 Arguments [".id", callee: ƒ, Symbol(Symbol.iterator): ƒ]
undefined
$(window)
VM3750:2 Arguments [Window, callee: ƒ, Symbol(Symbol.iterator): ƒ]
undefined
console.dir(add);
VM3909:1 ƒ add()arguments: nullcaller: nulllength: 0name: "add"prototype: {constructor: ƒ}__proto__: ƒ ()[[FunctionLocation]]: VM3623:1[[Scopes]]: Scopes[1]
undefined
function sub(...a){
console.log(a);
}
undefined
sub(10,2);
VM4041:2 (2) [10, 2]
undefined
sub.arguments
null
function sub(...a){
console.log(a instanceof Array) ;
console.log(arguments instanceof Array);

}
undefined
sub();
VM4245:2 true
VM4245:3 false
undefined
var b1 = [10,20];
undefined
var b2 = [20,200];
undefined
var b3 = [b1,b2];
undefined
b3;
(2) [Array(2), Array(2)]
b3[0]
(2) [10, 20]
b3[0][0];
10
var b4 = [...b1, ...b2];
undefined
b4;
(4) [10, 20, 20, 200]
function t (...a, ...b){

}
VM4535:1 Uncaught SyntaxError: Rest parameter must be last formal parameter
function t (...a, b){

}
VM4545:1 Uncaught SyntaxError: Rest parameter must be last formal parameter
function t (b,...a){

}
undefined
console.dir(t);
VM4604:1 ƒ t(b,...a)arguments: nullcaller: nulllength: 1name: "t"prototype: {constructor: ƒ}__proto__: ƒ ()[[FunctionLocation]]: VM4565:1[[Scopes]]: Scopes[1]
undefined
